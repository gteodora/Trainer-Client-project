@* @model IEnumerable<TrainerClientADOnet.Models.DTO.ClientDTO>*@
@model PagedList.IPagedList<TrainerClientADOnet.Models.DTO.ClientDTO>
@using PagedList.Mvc

@{
    ViewBag.Title = "Index";
}

<h2>Clients</h2>

<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model[0].FirstName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].LastName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].FullName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].DateOfBirth)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].RegistrationDate)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Description)
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FullName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DateOfBirth)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.RegistrationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = HttpUtility.UrlDecode(item.Id).Trim() }, null) |
                @Html.ActionLink("Details", "Details", new { id = HttpUtility.UrlDecode(item.Id).Trim() }, null) |
                @Html.ActionLink("Delete", "Delete", new { id = HttpUtility.UrlDecode(item.Id).Trim() }, null)  |||
                @Html.ActionLink("Programs", "AllProgramsOfClient", "Program", new { clientId = HttpUtility.UrlDecode(item.Id).Trim() }, null)
            </td>
        </tr>
    }

</table>

<style>
    .ul.pagination {
        display: inline-block;
        padding: 0;
        margin: 0;
    }

    ul.pagination li {
        display: inline;
    }

        ul.pagination li a {
            color: black;
            float: left;
            padding: 8px 16px;
            text-decoration: none;
            transition: background-color .3s;
        }

            ul.pagination li a.active {
                background-color: #4CAF50;
                color: white;
            }

            ul.pagination li a:hover:not(.active) {
                background-color: #ddd;
            }
</style>


<div id="container" style="margin-left: 20px">
    <p></p>
    <p></p>
    <div class="pagination" style="margin-left: 400px">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)
        of @Model.PageCount   @Html.PagedListPager(Model, page => @Url.Action("Index", "Client"));
        @*.Replace("i", clientID));*@
        @*of @Model.PageCount @PagedList.Mvc.HtmlHelper.PagedListPager(Html, Model, page => Url.Action("AllProgramsOfClient", "Program", new { clientId = clientID }, new { page })) *@


    </div>
</div>

