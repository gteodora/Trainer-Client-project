@model TrainerClientADOnet.Models.DTO.ProgramDTO

@using Microsoft.AspNet.Identity;
@using TrainerClientADOnet.Utilities;
@using TrainerClientADOnet.Models.DTO;


<h2>Create program for client</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProgramDTO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ClientId)

        <div class="form-group">
            @Html.LabelFor(model => model.IsMeal, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.IsMeal, Utility.returnSelectListOfProgramTypes(), " Select program type ", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IsMeal, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoalTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GoalTypeId, Utility.returnSelectListOfGoalTypes(), " Select goal type ", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GoalTypeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndTime.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}
@*
    <div>
        @Html.ActionLink("Back to List", "AllProgramsOfClient", new { clientId = HttpUtility.UrlDecode(Model.ElementAtOrDefault(1).client_id).Trim() }, null)
    </div>
    <div>
        @Html.ActionLink("Back to List", "AllProgramsOfClient", new { clientId = (string)Url.RequestContext.RouteData.Values["client_id"] })
    </div>
*@

    @{Uri uri = new Uri(HttpContext.Current.Request.Url.AbsoluteUri); 
    string clientID = HttpUtility.ParseQueryString(uri.Query).Get("clientId").Trim(); @*HttpUtility.UrlDecode(Model.ElementAtOrDefault(1).ClientId).Trim();*@
}
<div>

    @Html.ActionLink("Back to List", "AllProgramsOfClient", new { clientId = clientID }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
