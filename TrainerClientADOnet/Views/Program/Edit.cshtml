@model TrainerClientADOnet.Models.DTO.ProgramGoalTypeDTO

@using TrainerClientADOnet.Utilities;
@using TrainerClientADOnet.Models.DTO;


@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ProgramGoalTypeDTO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)


    <div class="form-group">
        @Html.LabelFor(model => model.IsMeal, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.IsMeal, Utility.returnSelectListOfProgramTypes(), " Select program type ", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.IsMeal, "", new { @class = "text-danger" })
        </div>
  </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GoalTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.GoalTypeId, Utility.returnSelectListOfGoalTypes(), " Select goal type ", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.GoalTypeId, "", new { @class = "text-danger" })
            </div>
       </div>

        @*
            <div class="form-group">
                @Html.LabelFor(model => model.GoalTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.GoalTypeId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.GoalTypeId, "", new { @class = "text-danger" })
                </div>
            </div>
        *@

        <div class="form-group">
            @Html.LabelFor(model => model.StartTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartTime.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartTime.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndTime.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndTime.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        @*
            <div class="form-group">
                @Html.LabelFor(model => model.IsMeal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsMeal)
                        @Html.ValidationMessageFor(model => model.IsMeal, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProgramType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProgramType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProgramType, "", new { @class = "text-danger" })
                </div>
            </div>
        *@
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "AllProgramsOfClient", new { clientId = Model.ClientId }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
